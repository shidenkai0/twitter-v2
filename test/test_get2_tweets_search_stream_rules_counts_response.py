# coding: utf-8

"""
    Twitter API v2

    Twitter API v2 available endpoints

    The version of the OpenAPI document: 2.79
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.get2_tweets_search_stream_rules_counts_response import Get2TweetsSearchStreamRulesCountsResponse

class TestGet2TweetsSearchStreamRulesCountsResponse(unittest.TestCase):
    """Get2TweetsSearchStreamRulesCountsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Get2TweetsSearchStreamRulesCountsResponse:
        """Test Get2TweetsSearchStreamRulesCountsResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Get2TweetsSearchStreamRulesCountsResponse`
        """
        model = Get2TweetsSearchStreamRulesCountsResponse()
        if include_optional:
            return Get2TweetsSearchStreamRulesCountsResponse(
                data = openapi_client.models.rules_count.RulesCount(
                    all_project_client_apps = [
                        openapi_client.models.app_rules_count.AppRulesCount(
                            client_app_id = '0', 
                            rule_count = 56, )
                        ], 
                    cap_per_client_app = 56, 
                    cap_per_project = 56, 
                    client_app_rules_count = openapi_client.models.app_rules_count.AppRulesCount(
                        client_app_id = '0', 
                        rule_count = 56, ), 
                    project_rules_count = 56, ),
                errors = [
                    openapi_client.models.problem.Problem(
                        detail = '', 
                        status = 56, 
                        title = '', 
                        type = '', )
                    ]
            )
        else:
            return Get2TweetsSearchStreamRulesCountsResponse(
        )
        """

    def testGet2TweetsSearchStreamRulesCountsResponse(self):
        """Test Get2TweetsSearchStreamRulesCountsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
